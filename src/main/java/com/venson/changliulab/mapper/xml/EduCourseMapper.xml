<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.venson.changliulab.mapper.EduCourseMapper">
    <select id="getPublishCourseInfo" resultType="com.venson.changliulab.entity.dto.CoursePreviewVo">
        select
            c.id,c.title, c.is_public, c.total_hour
            , cd.description as courseDescription
            , m.name as memberName
            , c.view_count
            , c.is_modified,c.review,c.is_published
            , c.cover
            , s.title as subjectTreeNode
            , s2.title as levelISubject
        FROM edu_course c
                 LEFT JOIN edu_member m on c.member_id = m.id
                 LEFT JOIN edu_course_description cd on c.id = cd.id
                 LEFT JOIN edu_subject s on c.subject_parent_id = s.id
                 LEFT JOIN edu_subject s2 on c.subject_id = s2.id
                 <where>
                     ${ew.customSqlSegment}
                 </where>
    </select>

    <select id="getCoursePreviewById" resultType="com.venson.changliulab.entity.dto.CoursePreviewVo">
        select
        c.id,c.title, c.is_public,c.total_hour
        , cd.description as courseDescription
        , m.name as memberName
        , c.view_count
        , c.is_modified,c.review,c.is_published
        , c.cover
        , s.title as subjectTreeNode
        ,s2.title as levelISubject
        FROM edu_course c
        LEFT JOIN edu_member m on c.member_id = m.id
        LEFT JOIN edu_course_description cd on c.id = cd.id
        LEFT JOIN edu_subject s on c.subject_parent_id = s.id
        LEFT JOIN edu_subject s2 on c.subject_id = s2.id
        WHERE c.id = #{id}
    </select>

    <select id ="getFrontCourseInfo" resultType="com.venson.changliulab.entity.front.vo.CourseFrontInfoDTO">
        select
            c.id,c.title, c.is_public,c.total_hour
            , c.cover
             , c.view_count
             , m.id as member_id
             , m.name as member_name
             , m.intro
             , m.avatar
             , cd.description as description
             , s.title as l1_subject
             , s.id as l1_subject_id
             , s2.title as l2_subject
             , s2.id as l2_subject_id
        FROM edu_course_published c
                 LEFT JOIN edu_member m on c.member_id = m.id
                 LEFT JOIN edu_course_description_published cd on c.id = cd.id
                 LEFT JOIN edu_subject s on c.subject_parent_id = s.id
                 LEFT JOIN edu_subject s2 on c.subject_id = s2.id
        WHERE c.id = #{id}
    </select>
</mapper>
